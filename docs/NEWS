$Id$

Avahi 0.5.2
===========

 * Bug fix release.
 * Fix browing in QT applications (was totally broken)
 * Minor documentation update.

Avahi 0.5.1
===========

 * This is a bug fix release, before the big changes coming in 0.6
 * Fix reporting of the NO_DAEMON error
 * Fix commit throttling algorithm for entry groups
 * Fix counting of the number of resources in an entry group 

Avahi 0.5, the 'Bom Dia' release
================================

 * New Mono bindings, allowing you to use Avahi from
   any CLI language such as C#
 * Attempt auto-detection of the D-BUS system bus address
 * Include a 'cookie' in all published records which allows us
   to reliably determine if a service is the same as another.
 * Add API to determine if services are local
 * Better support for threading with AvahiSimplePoll
 * Add some new StringList functions to help binding to it in
   other languages
 * Various build and run-time bug fixes

Avahi 0.4, the 'Hyvää päivää' release
=====================================

 * Renamed the include dirs for the Qt bindings to include the
   version number, as they may diverge in future.
 * Fix a critical bug in avahi-daemon triggered by configuring an interface
   with various DHCP clients when you have no other active addresses which
   caused avahi-daemon to abort.
 * Move to using python-gdbm exclusivly for the service type database.
 * Add support for SUSE
 * Various fixes to the build system

Avahi 0.3, the 'Buenos Días' release
====================================

 * New integration library for QT main-loop applications.
 * Fix a crash in avahi-dnsconfd
 * Documentation Updates
 * Fix building when you don't want Python DBUS or GTK
 * avahi-bookmarks
   - Add new help option
   - Fix handling of paths not starting with a /
   - You can now specify the port and IP to bind to
   - Add option to generate links with hostnames instead of IPs

Avahi 0.2, the 'Dzień Dobry' release
====================================

 * Unfortunately this release broke the API/ABI of libavahi-client
   with the following function removals

   Removal of these functions may affect users of the 0.1 API
    - avahi_service_resolver_block()

   The following functions were simply for debugging information
   and their removal should not affect anyone
    - avahi_entry_group_get_dbus_path()
    - avahi_domain_browser_get_dbus_path()
    - avahi_service_type_browser_get_dbus_path()
    - avahi_service_browser_get_dbus_path()

   Note that while the libavahi-client API changed slightly, the DBUS
   API itself has only had additions and no existing definitions
   have changed.
 
 * avahi-daemon will now ignore local IP addresses with the "link" scope
   unless it is the only IP address on the interface.
 * avahi-daemon will no longer fail to start if D-BUS is not
   available (if configured with enable-dbus=warn)
 * Fixed a potential crasher when resolving things in libavahi-core.
 * New example demonstrating integration into glib applications
 * Addtion of a set of convenience functions for AvahiStringList
   avahi_string_list_find()
   avahi_string_list_get_pair()
   avahi_string_list_add_pair()
   avahi_string_list_add_pair_arbitrary()
 * Fixed a typo in avahi-glib.pc that stopped programs using
   the GLIB api from compiling correctly
 * A critical bug in the reflector was fixed where it may go into a
   state of constantly flooding queries out to the network.
 * Introduced new asynchronous resolver API
 * libavahi-client gained an API for resolving HostNames and Addresses
   in addition to the ServiceResolver provided in 0.1
 * Added support for Arch and Gentoo linux distributions.
 * Allowed configuration on non-supported distributions
 * Fixed a critical bug where you cannot use more than one AvahiClient 
   or use it in an application already using D-BUS
 * Fixed assembly of empty string lists to RFC compliant TXT records
 * Added a new service type description database with human
   understandable descriptions of services with translations.
 * Fixed various minor memory corruption bugs
 * Fixed an issue where Avahi might think it encountered a conflict
   if the process or machine has been suspended
 * Fixed compilation and runtime issues on 64-bit distributions
 * ...
 * PROFIT!!!

Avahi 0.1, the "Guten Tag" release
==================================

The Avahi team would like to announce the immediate availability of
Avahi 0.1 "Guten Tag".

Avahi is a fully LGPL framework for Multicast DNS Service Discovery.
It allows programs to publish and discover services and hosts
running on a local network with no specific configuration.  For
example you can plug into a network and instantly find printers to
print to, files to look at and people to talk to.

Avahi is designed to be compatible with the mDNS/DNS-SD specification
and boasts the following features

 * Fully open source and freely available under the LGPL
 * Full IPv4 and IPv6 support
 * An embeddable mDNS stack
 * Dynamic adjustment to network reconfiguration
 * Daemon with DBUS API for desktop applications
 * C library to interface with the DBUS API
 * Compatible with other mDNS/DNS-SD implementations such as
   Howl and Apple Bonjour (previously Rendezvous)
 * Ability to correctly "reflect" mDNS between two or more LAN segments
 * Ability to configure DNS servers based on mDNS/DNS-SD published
   information, a feature that is very usefull on IPv6
   which has no other mechanism for this.
 * Combined with nss-mdns, allows hostname lookup such as
   'laptop.local' without the configuration of a DNS server.
   http://0pointer.de/lennart/projects/nss-mdns/
 * Easy integration into GLIB, GTK other mainloop applications.
 * Documentation and examples of both developer APIs and utilities.

mDNS/DNS-SD is part of a larger set of specifications for easy
configuration of networking known as "ZeroConf"
(http://www.zeroconf.org/), with the aim of allowing you to plug into
a network and instantly be able to interact with it's services.

Avahi was designed to be a fully free implementation, and is
available under the LGPL.  Many other implementations of the mDNS/DNS-SD
specification were previously non-free, restricting their use in many
platforms such as the GNOME desktop and many distributions.

While Avahi is a 0.1 release, we feel it is feature complete and
available for immediate use, developers can make use of the Avahi
client library to provide above mentioned functionality in their
programs.

We unfortunately do not have a logo yet! We would love if someone
could suggest ideas for a logo or even design us one.  If you think
you can help us out, you can contact us on our mailing list or by
emailing Trent Lloyd on lathiat@bur.st.

If you would like more information or help, you can subscribe
to our mailinglist, goto
    http://lists.freedesktop.org/mailman/listinfo/avahi

You can download Avahi 0.1 here
    http://www.freedesktop.org/~lennart/avahi-0.1.tar.gz

You can also find out more information from our homepage
    http://www.freedesktop.org/Software/Avahi

We would like to thank the following people for their
contribution to Avahi 0.1.
    Lennart Poeterring
    Trent Lloyd
    Sebastien Estienne
    Ross Burton
    Tommi Vainikainen
    Joe Shaw
    Ikke
    Steev

Cheers,
The Avahi Team
